*vim-android.txt*    For Vim version 7.3    Last change: 2013 July 13

Author:         Horacio Sanson
Licence:        Vim licence, see |license|
Homepage:       https://github.com/hsanson/vim-android
Version:        1.2.0

==============================================================================
Contents                                   *vim-android* *vim-android-contents*

         1. Intro ........................... |vim-android-intro|
              Supported Features              |vim-android-features|
              Known Issues                    |vim-android-issues|
         2. Requirements .................... |vim-android-requirements|
         3. Installation .................... |vim-android-installation|
         4. Usage ........................... |vim-android-usage|
              Commands ...................... |vim-android-commands|
              Key mappings .................. |vim-android-keys|
         5. Configuration ................... |vim-android-configuration|
         6. Todo ............................ |vim-android-todo|
         7. Credits ......................... |vim-android-credits|

==============================================================================
1. Intro                                                      *vim-android-intro*

vim-android is a plugin that facilitates the development of Android
applications withing vim. When editing a java or xml file this plugin tries
to find an AndroidManifest.xml file in the current directory and if found it
cofigures a set of variables and commands that allows easier development for
Android applications.

The latest version of this plugin can also build and install gradle based
projects that is the new build system used by the android build tools and
AndroidStudio.

------------------------------------------------------------------------------
SUPPORTED FEATURES                                         *vim-android-features*

The following features are supported by vim-android:

  - Auto-detection of Android projects when opening a Java or XML file. This
    relies on the AndroidManifest.xml file being located on the current
    working directory.
  - Automatically build using ant or gradle depending on the existence of the
    build.xml or build.gradle files respectively.
  - Set errorformat values to detect ant and gradle output errors.
  - Updates the CLASSPATH environment variable to include paths for your
    current project, external libs, external lib-projects and the current
    target Android SDK jars. This allows auto-completion of Java code using
    other plugins such as javacomplete.
  - Adds useful commands to compile and install your application APK into
    your emulator/devices.
  - Adds useful commands to generate tags for the current project source and
    the Android SDK sources.

------------------------------------------------------------------------------
Known Issues                                             *vim-android-issues*

  - The gradle build system error outputs do not show the original source
    filename. Instead they show a temporary file stored in the build folder.
    For this reason we cannot jump to the source file when browsing build
    errors in the quickfix window.
  - The javacomplete plugin is nice but in some situations it hangs or spits
    thousands of incomprensible error messages. For this reason I recommend
    disabling it.

==============================================================================
2. Requirements                                        *vim-android-requirements*

The following requirements have to be met in order to be able to use vim-android:

  - Vim 7.3 or higher. This plugin may also work with previous versions but I
    have only tested Vim 7.3.
  - Android SDK installed and with the platform-tools directory set in your
    PATH environment variable.

==============================================================================
3. Installation                                        *vim-android-installation*

It is recommended that you use a package manager like Pathogen or Vundle to
install this plugin. In the case of Vundle all you have to do is add this
line to your vimrc:
>
       Bundle 'hsanson/vim-android'
<
and then inside vim run the |:BundleInstall| command.

==============================================================================
4. Usage                                                      *vim-android-usage*

Before using this plugin you must tell it where you have the android SDK
installed. There are two ways to do this: you can set the ANDROID_HOME
environment variable to the absolute path of the android SDK or you can add
it to the global variable g:android_sdk_path in your vimrc file.

This plugin assumes your current working directory is the root path of the
android project you are working on. More precisely your current path must be
the same where the AndroidManifest.xml file is located or the plugin won't
load. When you open a Java or XML file this plugin checks for the presence of
the AndroidManifest.xml and if it exists it enables several commands to build
and install android apps into emulators and/or devices.

Optionally if you use gradle to build your projects (recommended) you also
need to tell the plugin where is your gradle installation. This can be done
by setting the GRADLE_HOME environment variable or by adding a global
variable g:gradle_path to your vimrc file with the absolute path to your
gradle installation.

------------------------------------------------------------------------------
COMMANDS                                                   *vim-android-commands*

:AndroidBuild <mode>                                            *:AndroidBuild*
    Builds the application APK. The <mode> parameter can be  release or
    debug mode for ant projects and any  buildType (e.g. release, debug, test)
    on gradle projects.

:AndroidClean                                                   *:AndroidClean*
    Cleans the build auto-generated files.

:AndroidInstall <mode>                                   *:AndroidDebugInstall*
    Build and installs the application in <mode> mode. In the case that you
    have several emulators running and/or several devices connected then this
    command will present you a list of emulators/devices so you can choose to
    which one the APK should be installed to.

:AndroidUninstall                                           *:AndroidUninstall*
    This command allows to uninstall the application. If you have several
    emulators running and/or several devices connected, then this command will
    prompt you with a list of emulators/devices so you can choose from which one
    the app should be uninstalled.

:AndroidUpdateAndroidTags                           *:AndroidUpdateAndroidTags*
    This is a simple helper command that generates a tags file from the
    android sdk sources. This tags files is automatically added to the local
    *tags* variable. This can be used for some tag based auto-completion plugins
    to enable auto-completion of android classes and methods.

    Generating the tags file for the Android SDK requires that you have the
    ctags command utility installed and available in your PATH. Also consider
    that this can take a long time to finish so use it only when you update your
    SDK.

:AndroidUpdateProjectTags                           *:AndroidUpdateProjectTags*
    This is similar to the :AndroidUpdateAndroidTags command but it generates
    the tags file for the current Android source code. This allows other tags
    based auto-completion plugins to auto-complete classes and methods of your
    own sources.

:AndroidUpdateTags                                         *:AndroidUpdateTags*
    Shortcut method that invokes both *:AndroidUpdateAndroidTags* and
    *:AndroidUpdateProjectTags* together.

:AndroidDevices                                               *:AndroidDevices*
    Lists all android devices connected and all running emulators.

------------------------------------------------------------------------------
KEY MAPPINGS                                                  *vim-android-keys*
By default the vim-android plugin has no mappings and all functionality is
accessed using the commmands *vim-android-commands* but this does not impede
you from creating your own mappings.

For example you can map a function key (e.g. F5) so it invokes the
:AndroidDebugInstall command:

>
nmap <F5> <ESC>:AndroidInstall debug<CR>
<

this way anytime you press the <F5> key it will build and install your
Android application.

==============================================================================
5. Configuration                                     *vim-android-configuration*

                                                        *g:android_sdk_path*
g:android_sdk_path~
Default: $ANDROID_HOME

This option must specify the location of your Android SDK installation.

Example:
>
        let g:android_sdk_path = '/opt/adroid-sdk'
<

                                                               *g:gradle_path*
g:gradle_path
Default: $GRADLE_HOME

When building gradle based projects we need to use the gradle tool to build
and install APK files. The g:gradle_path should be set to the absolute
directory path where gradle is installed. If g:gradle_path is not set then we
fallback to the $GRADLE_HOME environment variable.

                                                            *g:android_adb_tool*
g:android_adb_tool~
Default: {g:android_sdk_path}/tools/adb

This plugin relies heavily on the Android ADB tool to query devices/emulators
and to install the APK files. By default this tool is found inside the
Android SDK so you do not need to set this variable but if for some reason in
you installation the ADB tool is located in a different path you can
explicitly tell the plugin where to find it using this variable.

Example:
>
        let g:android_adb_tool=/path/to/tool/adb
<

                                                            *g:android_sdk_tags*
g:android_sdk_tags~
Default: ~/.vim/tags/android

By default the :AndroidUpdateAndroidTags commands generates the tags file in
~/.vim/tags/android. This file is automatically added to the *:tags*
variable. If you prefer the tags to be generated in a different place you may
change the default using this global variable.

Example:
>
        let g:android_sdk_tags=/path/to/tags/android.tags
<

------------------------------------------------------------------------------
ANDROID OMNI-COMPLETION                             *vim-android-omnicomplete*

This plugin by itself does not provide omni-completion of Android classes
and/or methods. Instead it relies on the javacomplete plugin to handle the
auto-completion (https://github.com/vim-scripts/javacomplete). Make sure you
have the javacomplete plugin intalled along this one.

For the javacomplete plugin to be able to auto-complete classes and
methods used in your Android app, it requires you to add all the JAR and source
directories of the Android SDK, external libraries and libs it uses.
Fortunately this plugin takes care of this for you.

This plugin scans the project.properties and the build.gradle files for
dependencies and the Android target SDK version and adds them to the
CLASSPATH environment variable that is used by javacomplete to generate the
auto-completion dictionary.

==============================================================================
9. Todo                                                       *vim-android-todo*

  - Add secure prompt to AndroidReleaseInstall that requires users to input
    the keystore and sign key passwords. Not sure how to make Vim not display
    the input text on screen.
  - Better Android XML omni-completion.
  - Maybe add one of the LogCat plugins arround to show the log directly
    inside Vim. This is low priority for me as the Android monitor is good for
    my purposes.

==============================================================================
10. Credits                                                *vim-android-credits*

vim-android was written from scratch but I learned and used as reference
several other plugins:

 - https://github.com/bpowell/vim-android
 - https://github.com/mgarriott/vim-android
 - https://github.com/anddam/android-javacomplete

==============================================================================
 vim: tw=78 ts=8 sw=4 sts=4 et ft=help
